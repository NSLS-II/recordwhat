from ophyd import (EpicsSignal, EpicsSignalRO)

from .. import (RecordBase, _register_record_type,
                FieldComponent as Cpt)


@_register_record_type('table')
class TableRecord(RecordBase):
    alarm_status = Cpt(EpicsSignalRO, '.STAT')
    code_version = Cpt(EpicsSignalRO, '.VERS')
    monitor_mask = Cpt(EpicsSignalRO, '.MMAP')
    set_set_mode = Cpt(EpicsSignal, '.SSET')
    set_use_mode = Cpt(EpicsSignal, '.SUSE')
    encoder_0x_val = Cpt(EpicsSignalRO, '.E0X')
    encoder_0y_val = Cpt(EpicsSignalRO, '.E0Y')
    encoder_1y_val = Cpt(EpicsSignalRO, '.E1Y')
    encoder_2x_val = Cpt(EpicsSignalRO, '.E2X')
    encoder_2y_val = Cpt(EpicsSignalRO, '.E2Y')
    encoder_2z_val = Cpt(EpicsSignalRO, '.E2Z')
    encoder_x = Cpt(EpicsSignalRO, '.EX')
    encoder_x_angle = Cpt(EpicsSignalRO, '.EAX')
    encoder_y = Cpt(EpicsSignalRO, '.EY')
    encoder_y_angle = Cpt(EpicsSignalRO, '.EAY')
    encoder_z = Cpt(EpicsSignalRO, '.EZ')
    encoder_z_angle = Cpt(EpicsSignalRO, '.EAZ')
    init_table = Cpt(EpicsSignal, '.INIT')
    limit_violation = Cpt(EpicsSignalRO, '.LVIO')
    motor_0x_hi_limit = Cpt(EpicsSignalRO, '.H0X')
    motor_0x_lo_limit = Cpt(EpicsSignalRO, '.L0X')
    motor_0x_readback = Cpt(EpicsSignalRO, '.R0X')
    motor_0x_val = Cpt(EpicsSignalRO, '.M0X')
    motor_0y_hi_limit = Cpt(EpicsSignalRO, '.H0Y')
    motor_0y_lo_limit = Cpt(EpicsSignalRO, '.L0Y')
    motor_0y_readback = Cpt(EpicsSignalRO, '.R0Y')
    motor_0y_val = Cpt(EpicsSignalRO, '.M0Y')
    motor_1y_hi_limit = Cpt(EpicsSignalRO, '.H1Y')
    motor_1y_lo_limit = Cpt(EpicsSignalRO, '.L1Y')
    motor_1y_readback = Cpt(EpicsSignalRO, '.R1Y')
    motor_1y_val = Cpt(EpicsSignalRO, '.M1Y')
    motor_2x_hi_limit = Cpt(EpicsSignalRO, '.H2X')
    motor_2x_lo_limit = Cpt(EpicsSignalRO, '.L2X')
    motor_2x_readback = Cpt(EpicsSignalRO, '.R2X')
    motor_2x_val = Cpt(EpicsSignalRO, '.M2X')
    motor_2y_hi_limit = Cpt(EpicsSignalRO, '.H2Y')
    motor_2y_lo_limit = Cpt(EpicsSignalRO, '.L2Y')
    motor_2y_readback = Cpt(EpicsSignalRO, '.R2Y')
    motor_2y_val = Cpt(EpicsSignalRO, '.M2Y')
    motor_2z_hi_limit = Cpt(EpicsSignalRO, '.H2Z')
    motor_2z_lo_limit = Cpt(EpicsSignalRO, '.L2Z')
    motor_2z_readback = Cpt(EpicsSignalRO, '.R2Z')
    motor_2z_val = Cpt(EpicsSignalRO, '.M2Z')
    readback_motors = Cpt(EpicsSignal, '.READ')
    set_table = Cpt(EpicsSignal, '.SET')
    speed_0x_val = Cpt(EpicsSignalRO, '.V0X')
    speed_0y_val = Cpt(EpicsSignalRO, '.V0Y')
    speed_1y_val = Cpt(EpicsSignalRO, '.V1Y')
    speed_2x_val = Cpt(EpicsSignalRO, '.V2X')
    speed_2y_val = Cpt(EpicsSignalRO, '.V2Y')
    speed_2z_val = Cpt(EpicsSignalRO, '.V2Z')
    sync_with_motors = Cpt(EpicsSignal, '.SYNC')
    x_angle = Cpt(EpicsSignal, '.AX')
    x_angle_hi_limit = Cpt(EpicsSignalRO, '.HLAX')
    x_angle_lo_limit = Cpt(EpicsSignalRO, '.LLAX')
    x_angle_readback = Cpt(EpicsSignalRO, '.AXRB')
    x_angle_true_value = Cpt(EpicsSignalRO, '.AXL')
    x_hi_limit = Cpt(EpicsSignalRO, '.HLX')
    x_lo_limit = Cpt(EpicsSignalRO, '.LLX')
    x_offset = Cpt(EpicsSignal, '.X0')
    x_readback_value = Cpt(EpicsSignalRO, '.XRB')
    x_translation = Cpt(EpicsSignal, '.X')
    x_true_value = Cpt(EpicsSignalRO, '.XL')
    x_angle_offset = Cpt(EpicsSignal, '.AX0')
    y_angle = Cpt(EpicsSignal, '.AY')
    y_angle_hi_limit = Cpt(EpicsSignalRO, '.HLAY')
    y_angle_lo_limit = Cpt(EpicsSignalRO, '.LLAY')
    y_angle_readback = Cpt(EpicsSignalRO, '.AYRB')
    y_angle_true_value = Cpt(EpicsSignalRO, '.AYL')
    y_hi_limit = Cpt(EpicsSignalRO, '.HLY')
    y_lo_limit = Cpt(EpicsSignalRO, '.LLY')
    y_offset = Cpt(EpicsSignal, '.Y0')
    y_readback_value = Cpt(EpicsSignalRO, '.YRB')
    y_translation = Cpt(EpicsSignal, '.Y')
    y_true_value = Cpt(EpicsSignalRO, '.YL')
    y_angle_offset = Cpt(EpicsSignal, '.AY0')
    z_angle = Cpt(EpicsSignal, '.AZ')
    z_angle_hi_limit = Cpt(EpicsSignalRO, '.HLAZ')
    z_angle_lo_limit = Cpt(EpicsSignalRO, '.LLAZ')
    z_angle_readback = Cpt(EpicsSignalRO, '.AZRB')
    z_angle_true_value = Cpt(EpicsSignalRO, '.AZL')
    z_hi_limit = Cpt(EpicsSignalRO, '.HLZ')
    z_lo_limit = Cpt(EpicsSignalRO, '.LLZ')
    z_offset = Cpt(EpicsSignal, '.Z0')
    z_readback_value = Cpt(EpicsSignalRO, '.ZRB')
    z_translation = Cpt(EpicsSignal, '.Z')
    z_true_value = Cpt(EpicsSignalRO, '.ZL')
    z_angle_offset = Cpt(EpicsSignal, '.AZ0')
    zero_table = Cpt(EpicsSignal, '.ZERO')

    # - common
    angular_units_name = Cpt(EpicsSignal, '.AEGU$')
    display_precision = Cpt(EpicsSignal, '.PREC')
    geometry = Cpt(EpicsSignal, '.GEOM')
    linear_units_name = Cpt(EpicsSignal, '.LEGU$')
    orientation_angle = Cpt(EpicsSignal, '.YANG')
    encoder_0x_inlink = Cpt(EpicsSignalRO, '.E0XI$')
    encoder_0y_inlink = Cpt(EpicsSignalRO, '.E0YI$')
    encoder_1y_inlink = Cpt(EpicsSignalRO, '.E1YI$')
    encoder_2x_inlink = Cpt(EpicsSignalRO, '.E2XI$')
    encoder_2y_inlink = Cpt(EpicsSignalRO, '.E2YI$')
    encoder_2z_inlink = Cpt(EpicsSignalRO, '.E2ZI$')
    motor_0x_hlm_link = Cpt(EpicsSignalRO, '.H0XL$')
    motor_0x_llm_link = Cpt(EpicsSignalRO, '.L0XL$')
    motor_0x_rbv_link = Cpt(EpicsSignalRO, '.R0XI$')
    motor_0x_outlink = Cpt(EpicsSignalRO, '.M0XL$')
    motor_0y_hlm_link = Cpt(EpicsSignalRO, '.H0YL$')
    motor_0y_llm_link = Cpt(EpicsSignalRO, '.L0YL$')
    motor_0y_rbv_link = Cpt(EpicsSignalRO, '.R0YI$')
    motor_0y_outlink = Cpt(EpicsSignalRO, '.M0YL$')
    motor_1y_hlm_link = Cpt(EpicsSignalRO, '.H1YL$')
    motor_1y_llm_link = Cpt(EpicsSignalRO, '.L1YL$')
    motor_1y_rbv_link = Cpt(EpicsSignalRO, '.R1YI$')
    motor_1y_outlink = Cpt(EpicsSignalRO, '.M1YL$')
    motor_2x_hlm_link = Cpt(EpicsSignalRO, '.H2XL$')
    motor_2x_llm_link = Cpt(EpicsSignalRO, '.L2XL$')
    motor_2x_rbv_link = Cpt(EpicsSignalRO, '.R2XI$')
    motor_2x_outlink = Cpt(EpicsSignalRO, '.M2XL$')
    motor_2y_hlm_link = Cpt(EpicsSignalRO, '.H2YL$')
    motor_2y_llm_link = Cpt(EpicsSignalRO, '.L2YL$')
    motor_2y_rbv_link = Cpt(EpicsSignalRO, '.R2YI$')
    motor_2y_outlink = Cpt(EpicsSignalRO, '.M2YL$')
    motor_2z_hlm_link = Cpt(EpicsSignalRO, '.H2ZL$')
    motor_2z_llm_link = Cpt(EpicsSignalRO, '.L2ZL$')
    motor_2z_rbv_link = Cpt(EpicsSignalRO, '.R2ZI$')
    motor_2z_outlink = Cpt(EpicsSignalRO, '.M2ZL$')
    speed_0x_inlink = Cpt(EpicsSignalRO, '.V0XI$')
    speed_0x_outlink = Cpt(EpicsSignalRO, '.V0XL$')
    speed_0y_inlink = Cpt(EpicsSignalRO, '.V0YI$')
    speed_0y_outlink = Cpt(EpicsSignalRO, '.V0YL$')
    speed_1y_inlink = Cpt(EpicsSignalRO, '.V1YI$')
    speed_1y_outlink = Cpt(EpicsSignalRO, '.V1YL$')
    speed_2x_inlink = Cpt(EpicsSignalRO, '.V2XI$')
    speed_2x_outlink = Cpt(EpicsSignalRO, '.V2XL$')
    speed_2y_inlink = Cpt(EpicsSignalRO, '.V2YI$')
    speed_2y_outlink = Cpt(EpicsSignalRO, '.V2YL$')
    speed_2z_inlink = Cpt(EpicsSignalRO, '.V2ZI$')
    speed_2z_outlink = Cpt(EpicsSignalRO, '.V2ZL$')
    wheelbase_x = Cpt(EpicsSignal, '.LX')
    wheelbase_z = Cpt(EpicsSignal, '.LZ')
    x_angle_user_hi_limit = Cpt(EpicsSignal, '.UHAX')
    x_angle_user_lo_limit = Cpt(EpicsSignal, '.ULAX')
    x_of_fixed_point = Cpt(EpicsSignal, '.SX')
    x_of_ref_point = Cpt(EpicsSignal, '.RX')
    x_user_hi_limit = Cpt(EpicsSignal, '.UHX')
    x_user_lo_limit = Cpt(EpicsSignal, '.ULX')
    y_angle_user_hi_limit = Cpt(EpicsSignal, '.UHAY')
    y_angle_user_lo_limit = Cpt(EpicsSignal, '.ULAY')
    y_of_fixed_point = Cpt(EpicsSignal, '.SY')
    y_of_ref_point = Cpt(EpicsSignal, '.RY')
    y_user_hi_limit = Cpt(EpicsSignal, '.UHY')
    y_user_lo_limit = Cpt(EpicsSignal, '.ULY')
    z_angle_user_hi_limit = Cpt(EpicsSignal, '.UHAZ')
    z_angle_user_lo_limit = Cpt(EpicsSignal, '.ULAZ')
    z_of_fixed_point = Cpt(EpicsSignal, '.SZ')
    z_of_ref_point = Cpt(EpicsSignal, '.RZ')
    z_user_hi_limit = Cpt(EpicsSignal, '.UHZ')
    z_user_lo_limit = Cpt(EpicsSignal, '.ULZ')
